package kr.or.ddit.fileUpload.controller;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.annotation.PostConstruct;
import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import kr.or.ddit.fileUpload.service.FileUploadService;
import kr.or.ddit.vo.FileUploadVO;
import lombok.extern.slf4j.Slf4j;

@Controller
public class FileUploadTest {

	@Inject
	private FileUploadService service;

	@RequestMapping(value = "/test/form", method = RequestMethod.GET)
	public String fileUploadForm() {
		return "test/fileupload";
	}
	@RequestMapping(value = "/file/fileUpload", method = RequestMethod.POST)
	@ResponseBody
//	public Map<String,Object> uploadFiles( @RequestParam("files")MultipartFile[] files) throws IOException{
	public Map<String,Object> uploadFiles(  MultipartHttpServletRequest multi) throws IOException{
		//@RequestParam(value="files[]")
		  Map<String,Object> resultMap=new HashMap<String,Object>();
		  Iterator<String>	filesNames= multi.getFileNames(); 
		  List<MultipartFile> files  = new ArrayList<>();
		  if(filesNames.hasNext()) {
			  files = multi.getFiles((String) filesNames.next());
		  }
		  
		  
		  	System.out.println(files);
			List<FileUploadVO> fileList = new ArrayList<>();
		  for(MultipartFile multipartFile : files) {
			try {
				FileUploadVO vo = new FileUploadVO(multipartFile);
				fileList.add(vo);
				System.out.println(vo.getFileName());
			} catch (IOException e) {
				e.printStackTrace();
			}
				String[] saveNames = service.fileInsert(fileList);
			System.out.println(saveNames);
			resultMap.put("saveName", saveNames);
	}
		return resultMap;

	}
	
}
//
//	@RequestMapping(value = "/file/fileUpload", method = RequestMethod.POST)
//	@ResponseBody
//	public Map<String, Object> uploadFiles(MultipartHttpServletRequest multi) throws IOException {
//
//		Map<String, Object> resultMap = new HashMap<String, Object>();
//		
//		List<FileUploadVO> fileList = new ArrayList<>();
//		 Iterator<String> files = multi.getFileNames();
//		
//		 while(files.hasNext()){
//	            String uploadFile = files.next();
//	                         
//	            MultipartFile mFile = multi.getFile(uploadFile);
//	            FileUploadVO vo = new FileUploadVO(mFile);
//	            System.out.println("실제 파일 이름 : " +vo.getFileName());
//				fileList.add(vo);
//	        }
//		 
//		 String[] num = service.fileInsert(fileList);
//		/*		
//		for(int i = 0   ;i<files.length;i++) {
//			System.out.println(files[i].getName());
//		}
//		
//		List<FileUploadVO> fileList = new ArrayList<>();
//
//		for (MultipartFile multipartFile : files) {
//			try {
//				FileUploadVO vo = new FileUploadVO(multipartFile);
//				log.info(vo.getFileName());
//				fileList.add(vo);
//			} catch (IOException e) {
//				e.printStackTrace();
//			}
//		}*/
//		
//		/*if (files.size() > 0 && !files.get(0).getOriginalFilename().equals("")) {
//			List<FileUploadVO> fileList = new ArrayList<>();
//
//			for (MultipartFile multipartFile : files) {
//				try {
//					FileUploadVO vo = new FileUploadVO(multipartFile);
//					System.err.println(vo.getFileName());
//					fileList.add(vo);
//				} catch (IOException e) {
//					e.printStackTrace();
//				}
//			}
//			 String[] num = service.fileInsert(fileList);
//			 if(num.length>0) resultMap.put("result", "OK");
//			 resultMap.put("value", num);
//		}else {
//			 resultMap.put("result", "FAIL");
//		}*/
//
////			
////			if(num.length>0) resultMap.put("result", "OK");
////			 resultMap.put("saveName", num);
////		
////		
////		/*List<FileUploadVO> fileList = new ArrayList<>();
////		for(MultipartFile multipartFile : files) {
////			try {
////				FileUploadVO vo = new FileUploadVO(multipartFile);
////				fileList.add(vo);
////			} catch (IOException e) {
////				e.printStackTrace();
////			}
////			
////			
////			
////			if(num.length>0) resultMap.put("result", "OK");
////			 resultMap.put("value", num);
////		}*/
//		return resultMap;
//
//	}
//
//	public void saveFiles(File saveFolder) {
//
//	}
//
//}

/*
 * @RequestMapping(value="/file/fileUpload", method=RequestMethod.POST)
 * 
 * @ResponseBody public Map<String, Object> uploadFiles(@RequestParam("files")
 * MultipartFile[] files){
 * 
 * Map<String ,Object> resultMap = new HashMap<String,Object>();
 * 
 * if(files==null || files.length ==0) resultMap.put("result", "FAIL");
 * List<FileUploadVO> fileList = new ArrayList<>(); for(MultipartFile
 * multipartFile : files) { try { FileUploadVO vo = new
 * FileUploadVO(multipartFile); fileList.add(vo); } catch (IOException e) {
 * e.printStackTrace(); }
 * 
 * String[] num = service.fileInsert(fileList);
 * 
 * if(num.length>0) resultMap.put("result", "OK"); resultMap.put("value", num);
 * } return resultMap;
 * 
 * 
 * if(files==null || files.length ==0) resultMap.put("result", "FAIL");
 * List<FileUploadVO> fileList = new ArrayList<>(); for(MultipartFile
 * multipartFile : files) { try { FileUploadVO vo = new
 * FileUploadVO(multipartFile); fileList.add(vo);
 * 
 * } catch (IOException e) { e.printStackTrace(); }
 * 
 * String[] num = service.fileInsert(fileList); if(num.length>0)
 * resultMap.put("result", "OK"); //resultMap.put("value", num); } return
 * resultMap; }
 */
