- MVC (Model - View - Controller) 패턴
   ==> 사용자 인터페이스와 비지니스 로직을 분리하여 애플리케이션의 시각적 요소와 
          그 이면에 실행되는 비지니스 로직이 서로 영향 없이 수정 및 유지 보수할 수 있는 디자인 패턴이다.

- Model 영역  ==> 애플리케이션에서 다루는 데이터와 이 데이터를 처리하는 
		 비지니스 로직을 통털어 Model영역이라 한다.
- View 영역 ==> 최종 사용자에게 보여줄 프리젠테이션 로직을 담당하는 영역을 말한다.

- Controller영역 ==> 사용자의 요청을 받아 이를 수행하기 위한 비지니스 로직을 선택하고 호출하며,
		수행한 비지니스 로직의 결과를 View에게 보내주는 역할을 담당한다.

------------------------------------------------------------------------------------------------------
- MVC패턴의 비지니스 로직을 처리하는 클래스
1) VO, DTO ==> 데이터를 저장하는 역할만 하는 클래스
	( VO ==> Value Object,  DTO ==> Data Transfer Object)
	  ==> DB 테이블에서 1개의 레코드를 저장할 수 있는 클래스를 말한다.

2) DAO  ==> SQL문을 DB서버에 보내서 결과를 얻어오는 역할을 수행하는 클래스
	( DAO ==> Data Access Object )

3) Service ==> 일을 수행하는 중간 관리자와 같은 역할을 수행하는 클래스
	 서비스는 일이 있으면 그 일에 필요한 DAO를 호출해서 일을 처리한 후
	 그 결과를 Controller에게 전달해 준다.

4) Controller ==> 비지니스 로직이 시작되는 곳으로 일을 만들어서 Service에게 일을 시키고,
	Service가 보내온 처리 결과를 화면등에 반영시키는 역할을 수행한다.


Controller  --->  Service  ---> DAO  ---> DB서버
               <---             <---         <---
    ==> 각 단계에서 필요한 데이터나 처리된 결과는 주로 VO나 Collection객체에 담아서 보낸다.










