1. 로직 처리 순서 :Filter -> intercepter - > controller

1. UI 

2. 컨트롤러 (파라미터 받아서 -> 필요한 데이터 만들어서 -> 전달)
 권고 : 특정 UI <-> 특정 컨트롤러 <-> 해당 main service --->서비스 호출
 한 화면마다 각 컨트롤러를 분리함 
 중복 처리를 하는 것보다 다른 처리를 할 수 있도록 하는게 좋다. 
 유지 보수를 할 때 각 화면마다 따로 처리되어있는 경우 유지보수가 더 쉽다
=================================================
 파라미터 :  필요한 요청 정보를 받는다.  
 1) 파라미터 조회 : (함수의 파라미터, 세션 정보)
 2) 파라미터 검증 : (Validation : 파라미터 기본 검증 , 파라미터 업무 로직에 관한 검증) 
파라미터로붙너 받은 변수를 통하여 하위에 사용할 변수를 우선 조회 
 하위에 처리할파라미터 우선 선언 
/** 트랜잭션 단위가 다를 경우에만 서비스를 1번 이상 호출하도록 권고**/
 3. 서비스로 보낼 파라미터 구성 -> 서비스 호출 1 
 파라미터 검증 
 4. 서비스로 보낼 파라미터 구성 -> 서비스 호출 2 
 5. UI로 절달한 파라미터 구성 --> (ModelMap , Model ,Map)  

리턴타입 선언 

Stringbuffer sb = new StringBuffer();

로직처리 
 - 내부에서만 사용할 변수 : i , v , m , s : 간단한 알기 어려운 파라미터 변수도 사용가능

 - 중복되더라도 로직처리를 명확하게 하기 위해 반복처리를 하나하나 한다 

 람수가 복잡성이 크다면 private 함수를 정의하여 사용


/** 메인 주석 */
{
 로직 1 
}
{
로직2
} 

3. 서비스 