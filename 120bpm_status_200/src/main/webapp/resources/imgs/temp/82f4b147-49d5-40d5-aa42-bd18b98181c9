<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security"%>
 
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
 
<script type="text/javascript"	src="${cPath }/resources/js/jquery.form.min.js"></script>
<script src="${pageContext.request.contextPath }/resources/js/paging.js"></script>
<link rel="stylesheet" href="${cPath }/resources/css/workList.css">
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<link rel="stylesheet" href="${cPath }/resources/css/commons.css">
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style type="text/css"> 

.back, #workList {
	padding-top: 50px;
}

tr[id]:hover {
	background-color: #F7E7B1;
	cursor: pointer;
}

tr {
	cursor: default;
}

input, select {
	outline: none;
}

.testTags {
	width: 150px;
	height: 30px;
	border-radius: 5px;
	border: 1px solid #26838D;
}

.selectTags {
	width: 150px;
	height: 50px;
	border-radius: 3px;
	border: 1px solid #26838D;
}

select {
	/*  width: 100px; */
	height: 30px;
	padding-left: 10px;
	border: 1px solid #26838D;
	border-radius: 3px;
	/* 	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none; */
}

select::-ms-expand {
	display: none;
}

.dateTags {
	height: 30px;
	margin-top: 20px;
	margin-left: 10px;
	border: 1px solid #26838D;
	border-radius: 3px;
}

.W00201 {
	background-color: #FDB7BA;
	font-weight: 600;
}
/* .W00202{
 background-color: FC7399;
} */
.W00204 {
	background-color: #BEEBFD;
}

i {
	cursor: pointer;
}

.noAceess {
	text-align: center;
}

.realLink:hover {
	cursor: pointer;
}

 
 
#chartUI{
	display: grid;
	grid-template-columns: 1fr 1fr;
}
   
.smallD {
    margin: 20px;
    float: left;
    box-shadow: 1px 2px 3px 1px #d5d7db;
    padding: 0 10px;
    border-radius: 20px;
    background-color: white;
   
}

#multiLine{

text-align:center;
vertical-align:middle;
}

.links {
text-align: left;
font-size: 1.2em;
}

#myWorkList{
width :100%;
table-layout:fixed;

}


.sj {
width:100px; white-space:nowrap; overflow:hidden; text-overflow:ellipsis;

 }
 
.selectCheck{
 display :none;
 
}

.leftArea{
text-align: right;

}

/* 모달창의 배경을 만든다 */
  .modal__background{
  position: fixed;
  top:0; left: 0; bottom: 0; right: 0;
  background: rgba(230, 230, 230, 0.8);
}  

 
 .modal {
        text-align: center;
         border-radius: 10px;
}
</style>
</head>
<security:authentication property="principal.adaptee" var="authMember" />
<security:authentication property="authorities" var="authMemRoles" />

<body>

<div id = "chartUI">
<div class="smallD">
	<div id="count"></div>
</div>
<div class="smallD multi">
	<div id="multiLine"></div>
</div>
</div>
 
	<div id="searchUI" class="form-inline justify-content-start ">
		<div class="xs-12">
			카테고리 <select id="category" name="ctgryCode">
				<option value>카테고리</option>
				<c:forEach items="${cartegoryList }" var="cartegory">
					<option value="${cartegory.ctgryCode }">
						${cartegory.ctgryNm }</option>
				</c:forEach>
			</select>
			
			 &nbsp;  승인 상태 <select id="ReqStatus" name="workReqSttusCode">
				<option value>승인상태</option>
				<option value="isNull">승인요청 전</option>
				<c:forEach items="${CommonList }" var="commons">
					<option value="${commons.codeNo }">
						${commons.codeNm }</option>
				</c:forEach>
			</select>
		 
			공개 여부
			<select id="openAt" name="workOthbcAt">
			<option value>공개여부</option>
			<option value="1">공개</option>
			<option value="0">비공개</option>
			</select>
			
			 &nbsp; 제목 검색 <input type="text" name="searchWord" class="testTags" />
			 <input type="hidden" value="title" name="searchType" >
			시작일 <input class="dateTags" type="date" name="startDate" /> &nbsp;
			종료일 <input class="dateTags" type="date" name="endDate" />
			<button type="button" id="searchBtn" class="btnTags btn searchBtn">검색</button>
			<button type="button" class="resetBtn btn"><img class="resetImg" src="${cPath}/resources/imgs/img/reset.png"></button> 
		
		</div>
	</div>
		<div class="w-100"></div>
		<div class="links xs-4">
			 <span class="link realLink" onclick="allWork()">전체일감 </span> <span  class="link">  &nbsp; &nbsp;|  &nbsp; &nbsp;</span> 
			 <span class="link realLink" onclick="myWork()">내일감</span><span  class="link">  &nbsp; &nbsp;|  &nbsp; &nbsp;</span> 
			 <span class="link realLink" onclick="bookMark()">⭐즐겨찾기 일감</span>
			<c:url value="/project/${pagingVO.workVO.prjctNo }/work/create" var="insertURL">
			 </c:url>
			 <span class="link realLink controlBtn" data-gopage="${insertURL }">새 일감 추가 <i class="fa fa-plus" aria-hidden="true"></i></span>
			
		</div>
	<table id="myWorkList" class="table">
	<thead class="listHeader">
		<tr>
			<th class="selectAll selectCheck">전체선택
			<input class="selectCheck" id="allCheck" type="checkbox" > </th>
			<th>카테고리</th>
			<th>공개 여부 &nbsp;<i class="fa fa-sort sort" aria-hidden="true" data-item="WORK_PRIORT_CODE"></i> </th>
			<th colspan="3" >일감 제목 <i class="fa fa-sort sort" aria-hidden="true"  data-item="WORK_SJ"></i></th>
			<th>승인 상태</th>
			<th>우선순위 &nbsp;<i class="fa fa-sort sort" aria-hidden="true" data-item="WORK_PRIORT_CODE"></i> </th>
			<th>종료일자 &nbsp;</th>
			<th>진척도 &nbsp; <i class="fa fa-sort sort" aria-hidden="true"
				data-item="WORK_PRGS_DGREE_POINT"></i></th>
		    
			</tr>
	</thead>
		<tbody id="myWorkBody">

		</tbody>
		<tfoot>
			<tr>
				<td class='selectCheck'></td>
				<td colspan="9">
					<div id="pagingArea" class="d-flex justify-content-center"></div>
				
					<div id="btnArea" class="leftArea">
						<span id="reset"></span>
						<button id="delete" class="btn deleteBtn checking origin">삭제</button>
						<button id="acceptReq" class="btn  btbtn  checking origin">완료 승인요청</button>	
					</div>
				</td>
			</tr>
		</tfoot>
			
	</table>
	
	<form id="searchForm" method="post" action="${cPath }/project/${pagingVO.workVO.prjctNo }/myWorkListJson">
		<input type="hidden" name="ctgryCode"> 
		<input type="hidden"  name="workOthbcAt"> 
		<input type="hidden"  name="workReqSttusCode"> 
		<input type="hidden"  name="searchType"> 
		<input type="hidden"  name="searchWord"> 
		<input type="hidden"  name="startDate">
		<input type="hidden"  name="endDate"> 
		<input type="hidden"  name="page"> 
		<input type="hidden"  name="sidx"> 
		<input type="hidden"  name="sortType" />
	</form>
	
 

<!-- 비밀번호 체크 -->
  <div id="background">
		 <div class="modal fade" id="checkModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
		  <div class="modal-dialog modal-fullscreen-lg-down  modal-dialog-centered">
		    <div class="modal-content">
		      <div class="modal-header">
		        <h2 class="modal-title" id="staticBackdropLabel" >
		       	  <i class="fa fa-pencil-square-o" aria-hidden="true"></i> 	비밀번호 확인
		    </h2>
		      		 <a class="btn-close trigger closeModal" href="#">
       					 <i class="fa fa-times" aria-hidden="true"></i>
    				  </a>
		      </div>
		      <div class="modal-body">
		      	<form id="passCheckForm" method="Post">
		      	<label>비밀번호</label>
		      		<input  type="password" onkeyup="enterDown()"  id="memIdCheck" name="memPass" class="holderInput inputPass" placeholder="비밀번호 입력" required>
		      		<input type="hidden" name="memId" >
		      		<input type="hidden" name="workCode[]" >
		      		<input  name="choice">
		      		<!-- type="hidden" -->
		      	</form>
		    	<div class='show'> <button type="button"  class="btn btn-sm btn-light" id="showMemPass">비밀번호 보기<span class="checkAt"><i class="fa fa-square-o" aria-hidden="true"></i></span></button></div>
		      <div class="modal-footer">
		        <button type="submit" class="btn updateBtn check">확인</button>
		        <button type="button"  class="btn btn-secondary closeModal" data-bs-dismiss="modal">닫기</button>
		      </div>
				 
		      </div>
		    </div>
		  </div>
		</div>
</div>
 

<script type="text/javascript">
  
 //============================================
	
	function bookMark(){
		location.href = "${cPath}/project/${pCode}/myBookmarkList";	
	}
	//memFnm
	
	 $.ajax({
		 url : "${cPath}/project/${pCode}/perMonth",
		 dataType :"json",
		 success :function(resp){
			 let workPercent = resp.perMonth
			 console.log(resp.perMonth)
			 let seriesArr1 = [];
			 let labelsArr1 = [];
			 $(workPercent).each(function(idx, work) {
				// console.log( "reqMonth" + work.reqMonth)
				 seriesArr1.push(work.reqMonth)
				 labelsArr1.push(work.workRgsde)
				});
			 
			   var options = {
				          series: [{
				            name: "등록된 일감 수",
				            data: seriesArr1
				        }],
				          chart: {
				          height: 200,
				          width : 300,
				          type: 'line',
				          zoom: {
				            enabled: false
				          }
				        },
				        dataLabels: {
				          enabled: false
				        },
				        stroke: {
				          curve: 'straight'
				        },
				        title: {
				          text: '월별 일감 등록 수',
				          align: 'left'
				        },
				        grid: {
				          row: {
				            colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
				            opacity: 0.5
				          },
				        },
				        xaxis: {
				          categories: labelsArr1,
				        }
				        };
				        var chart1 = new ApexCharts(document.querySelector("#count"), options);
				        chart1.render();

		 }
		 
		 
	 })
 
     
	
	 $.ajax({
		 url : "${cPath}/project/${pCode}/percent",
		 dataType :"json",
		 success :function(resp){
			 
			 let workPercent = resp.workPercent
			 let seriesArr = [];
			 let labelsArr = [];
			 $(workPercent).each(function(idx, work) {
				 seriesArr.push(work.percent)
				 labelsArr.push(work.ctgryNm)
		});
			 var options1 = {
					 chart: {
						  height: 200,
						    type: "radialBar" 
					  },
					  series: seriesArr ,
					  title: {
					      text: '내 일감 진척도',
					  },
					  plotOptions: {
					    radialBar: {
					    	  hollow: {
					    	        margin: 15,
					    	        size: "50%"
					    	      },
					      dataLabels: {
					        total: {
					          show: true,
					          label: 'TOTAL',
					          offsetY: -10,
					          color: "#888"
					        }
					      }
					    }
					  },
					  stroke: {
						    lineCap: "round",
						  },
					  labels: labelsArr
					};

					new ApexCharts(document.querySelector("#multiLine"), options1).render();

		 }
		 
		 
	 })

 

//============================================================================================
let searchForm  = $("#searchForm")
let tbody = $("#myWorkBody")
let pagingArea = $("#pagingArea")
let deleteBtn = $(".deleteBtn")

let acceptReq = $(".acceptReq")
 
let checkAt = $(".checkAt");
	 
let sendWorkId = [];

$("[name='searchType']").val("title");
$("[name='searchWord']").val("${pagingVO.simpleSearch.searchWord}");
$("[name='startDate']").val("${pagingVO.simpleSearch.startDate}");
$("[name='endDate']").val("${pagingVO.simpleSearch.endDate}");
$("[name='ctgryCode']").val("${pagingVO.simpleSearch.ctgryCode}");
$("[name='workReqSttusCode']").val("${pagingVO.simpleSearch.workReqSttusCode}");
$("[name='workOthbcAt']").val("${pagingVO.simpleSearch.workOthbcAt}");
searchForm.find("[name='page']").val("");

let bgnde = $("input[name='startDate']")
let endde = $("input[name='endDate']")

let myCheckAt = false;
sortResult = false; //asc

let choice = $("input[name='choice']")

$(".resetBtn").on("click", function() {
	myWork();
})

function allWork() {
		location.href="${cPath}/project/${pCode}/workList"
	}



$("tbody").on( "click", ".sj", function() {
			let workCode = 	$(this).closest("tr").prop("id")
			 console.log(workCode)
			 location.href = "${cPath}/project/${pCode}/workDetail/"+ workCode ;
		 
		});
//리셋
function myWork(){
	$("[name='searchWord']").val("");
	$("[name='startDate']").val("");
	$("[name='endDate']").val("");
	$("[name='ctgryCode']").val("");
	$("[name='workReqSttusCode']").val("");
	$("[name='workOthbcAt']").val("");
	$("[name='sidx']").val("");
	$("[name='sortType']").val("");
	searchForm.find("[name='page']").val("");
	searchForm.submit();
}

//정렬 변경
$(".sort").on("click", function() {
	if (sortResult) { //true면 
		sortResult = false; //desc
		$("[name='sortType']").val("asc")
		$("[name='sidx']").val($(this).data("item"))
		searchForm.find("[name='page']").val("");
		searchForm.submit();
	} else {
		sortResult = true; //asc
		$("[name='sortType']").val("desc")
		$("[name='sidx']").val($(this).data("item"))
		searchForm.find("[name='page']").val("");
		searchForm.submit();
	}
});


//검색버튼
$("#searchBtn").on( "click", function() {

			if (($(bgnde).val != null && $(endde).val() == null)
					|| ($(endde).val != null && $(bgnde).val() == null)) {

				swal({
					title : "잘못된 요청입니다!",
					text : "시간과 종료기간 모두 선택해주세요",
					icon : "error",
				});
				return false;
			} else if (new Date($(bgnde).val()).getTime() > new Date($(endde).val()).getTime()) {
				swal({
					title : "잘못된 요청입니다!",
					text : "종료날짜보다 시작날짜가 작아야합니다.",
					icon : "error",
				});

				return false;
			} else {
				searchForm.find("[name='page']").val("");
				searchForm.submit();
			}
		})

 ///페이징
  $("#searchForm").paging().ajaxForm(
		{
			dataType : "json",
			success : function(pagingVO) {
				tbody.empty();
				pagingArea.empty();
				let workList = pagingVO.dataList;
				let trTags = [];
				if (workList && workList.length > 0) {
					$(workList).each(function(idx, work) {
						trTags.push(makeMyTrTag(work));
					});
					sendWorkId = [];
					myCheckAt = false;
					 $('#allCheck').prop('checked', false)	
					 $(".selectCheck").hide();
					 $(".origin").addClass("checking")
					 $("#re").remove();
					pagingArea.html(pagingVO.pagingHTMLBS);
				} else {
					trTags.push($("<tr>").html(
							$("<td>").attr("colspan", "9").html(
									"해당하는 업무가 존재하지 않습니다.")));
				}
				tbody.append(trTags);
			}
		}).submit();
 
 
$("tbody").on("click" , ".whyNot" , function(){
	 
	 $.ajax({
		url : "${cPath}/project/${pCode}/returnWhy",
		data : {"workCode" : $(this).data("workCode")},
		dataType :"json",
		type : "post",
		success :function(resp){
			//console.log(resp)
		if(resp.result =="SUCCESS"){
			Swal.fire({
				  icon :"info", 
				  text: resp.why,
				  button: "확인"
				});
		}else{
			Swal.fire({
				  icon :"error", 
				  text: resp.why,
				  button: "닫기"
				});
			
		}
	 }
	});  
	
});
 //===============================================================
 
function makeMyTrTag(work){
 
if( (work.workReqSttusCode!=null && work.workReturnWhy!=null)    ){//조건 반려 상태인경우 상태이고 메세지가 등록되어있는경우 
	return $("<tr>").append(
			$("<td>").append( $("<input class='myCheck' >").attr("type" , "checkbox").attr("data-workReqCode", work.workReqSttusCode).prop("name" , "workCode")
								).prop("class" ,"selectCheck , links"),
			$("<td>").html(work.ctgryNm),
			$("<td>").html(work.workOpen),
			$("<td colspan='3' class='sj'>").css("width" ,"30%" ).html(work.workSj),
			$("<td>").html(work.workReqNm +"&nbsp;&nbsp;")
							.append(  //.data("returnWhy", work.workCode)html(+" &nbsp; ")
							$("<span>").append(
									$('<span  class="badge badge-light whyNot" >').append(
											"&nbsp;"+ '<i class="fa fa-commenting fa-2x " aria-hidden="true"></i>'		
												).data("workCode", work.workCode )
									 ) 
							
								),
			 $("<td>").html(work.priortNm),
			 $("<td>").html(work.workBgnde== null ? work.workBgnde : "미정" ),
			 $("<td>")
					.append(
							$("<div>").prop("class", "progress")
									.append(
											$("<div>").prop("class","progress-bar").attr(
															{
																"aria-valuemin" : "0",
																"aria-valuemax" : "100",
																"aria-valuenow" : work.workPrgsDgreePoint
															}).html(work.workPrgsDgreePoint + "%").css( "width", work.workPrgsDgreePoint)
									))  
			).prop("id", work.workCode).prop("class", work.workPriortCode)
	
	
}else{ // 
	return $("<tr>").append(
					$("<td  >").append( $("<input>").attr("type" , "checkbox").prop("class" ,'myCheck').attr("data-workReqCode", work.workReqSttusCode).prop("name" , "workCode") ).prop("class" ,"selectCheck , links") , 
					$("<td>").html(work.ctgryNm),
					$("<td>").html(work.workOpen),
					$("<td colspan='3' class='sj'>").css("width" ,"30%" ).html(work.workSj),
					$("<td>").html(work.workReqNm),
					$("<td>").html(work.priortNm),
					 $("<td>").html(work.workBgnde== null ? work.workBgnde : "미정" ),
					$("<td>").append(
									$("<div>").prop("class", "progress")
											.append(
													$("<div>").prop("class","progress-bar").attr(
																	{
																		"aria-valuemin" : "0",
																		"aria-valuemax" : "100",
																		"aria-valuenow" : work.workPrgsDgreePoint
																	}).html(work.workPrgsDgreePoint + "%").css( "width", work.workPrgsDgreePoint)
											))).prop("id", work.workCode).prop("class", work.workPriortCode).data("workSttusCode" ,work.workSttusCode)
			}
}
 
//===============================================================

  
 $("tbody").on("change" , ".myCheck" , function(){
	 
	 		if($(this).hasClass("notAccess")){
	 			$(this).prop('checked',false);
	 			Swal.fire({
					  icon :"error", 
					  text: "이미 승인 신청을 한 일감과 완료된 일감은 선택이 불가합니다",
					  button: "확인"
					});
	 		}else{
	 			  let checkboxes   = $(".myCheck").length;
	 			  let disabled =   $('.notAccess').length;
	 			  let checked = $(".myCheck:checked").length;
	 			  let allCheckLenght =checkboxes - disabled;
	 			 if(allCheckLenght!= checked){
	 				$('#allCheck').prop('checked',false);
	 			 }else if(allCheckLenght==checked){
	 				$('#allCheck').prop('checked',true);
	 			 }
	 		}	 
}) 

  
  
 //===============================================================
 
 
 
$("#allCheck").on("click", function(){
	if($('#allCheck').is(':checked')){
		
		  let checkboxes   = $(".myCheck").length
		  let disabled =   $('.notAccess').length
		  let allCheckLenght =checkboxes - disabled;
		  
		  
			if(allCheckLenght>0){
				if($(".myCheck").hasClass("notAccess")){
					  $('.myCheck').prop('checked',false);
				}else{
					  $(".myCheck").prop('checked',true); 
				}
				 
			}else{
				Swal.fire({
					  icon :"error", 
					  text: "변경 가능한 일감이 없습니다",
					  button: "확인"
				}).then(function(){
					 $('#allCheck').prop('checked',false);
			    });
			}		 
		
	    }else{
	       $('.myCheck').prop('checked',false);
	    }

})
 //========변경 가능한 일감 체크 이미 신청되거나 완료된 경우 셀렉트 삭제======================================================
 
 
let checking = $(".checking");
	 
	$("table").on("click",".checking", function(){
		 var select = document.querySelectorAll('.myCheck');
		   for (i = 0; i < select.length; i++) {
			   let selectClass = select[i];
		     let req =	$(selectClass).attr("data-workreqcode");
		     
		     if(req=="W00301" || req=="W00302"){
					 $(selectClass).remove();
				}
		  }
		
		   myCheckAt = 	 true;
	 $(".selectCheck").show();
	 $(".checking").removeClass("checking")
	 $("#reset").append(
			 $("<button >").prop("class" , "btn, gobackBtn").prop("id" ,"re").attr("type" ,"button").html("취소")		 
	 ) 
	 })	 
	 
	 //===============================================================
 	
	

	 
	 
	 
	 $("#btnArea").on("click" , "#re", function(){
		 $(".selectCheck").hide();
		 $(".origin").addClass("checking")
		 $("#re").remove();
	 })
	 
	 
	 
 
	 
	 //z클릭된 동안 속성 변경
$("#showMemPass").on("mouseup" , function(){
	$("#memIdCheck").attr("type" , "password");
	checkAt.html('<i class="fa fa-square-o" aria-hidden="true"></i>')
});

 
$("#showMemPass").on("mousedown" , function(){
	$("#memIdCheck").attr("type" , "text");
	checkAt.html('<i class="fa fa-check-square" aria-hidden="true"></i>')
});

	
	
$(".closeModal").on("click" , function(){
	  $("#checkModal").hide();
	  $( '#background' ).removeClass( 'modal__background' );
	  choice.val("");
}) 
	
	
	function checkedArray(){
	 	  let cnt = 0 ; 
	let checked = $(".myCheck:checked").each(function(){
    	  let value = $(this).closest("tr").attr("id")
    	  cnt ++;
    	  sendWorkId.push(value)
    })
	
	    if(	myCheckAt &&  cnt>0){
	     $(checkModal).show();
		 $( '#background' ).addClass( 'modal__background' );
	    }   
		return cnt
	}
	
 
	$("#acceptReq").on("click" , function(){
				checkedArray()
				choice.val("req");
		// let sendWorkId = [];
		
	/* 	  let cnt = 0 ; 
			let checked = $(".myCheck:checked").each(function(){
		    	  let value = $(this).closest("tr").attr("id")
		    	  cnt ++;
		    	  sendWorkId.push(value)
		    })
			
			    if(	myCheckAt &&  cnt>0){
			     $(checkModal).show();
				 $( '#background' ).addClass( 'modal__background' );
			    }  */
	  });
	  
	  
	$("#delete").on("click" , function(){
		// let sendWorkId = [];
		checkedArray()
	    choice.val("del")
	  });

	
	function enterDown() {
		if (window.event.keyCode == 13) { 
			formSubmit();
		 } 
		}

		 
	 
		
	function formSubmit(){
		$.ajax({
			url : "${cPath }/project/${pCode}/work/accountCheckAll",
			method :"post",
			dataType : 'text',
			traditional : true,
			dataType : 'text',
			data : {"memPass"  : $("#memIdCheck").val() , 
				"workCode" :  sendWorkId  , "memId" : "${authMember.memId}" ,
				"memName"	: "${authMember.memLnm}${authMember.memFnm}" , "choice" : choice.val()
				},	
			success : function(resp){
		 		
					if(choice.val()=="req"){
						
							if(resp == "SEND" ){
								Swal.fire({
									  icon: "success",
									  title: "승인 요청 성공",
									  text: "승인요청이 성공적으로 완료되었습니다.",
									}).then(function(){
										 location.reload();
								    });
							}else if(resp == "SENDFAIL" ){
								Swal.fire({
									  icon: "error",
									  title: "승인 요청 오류",
									  text:  "PM에 알림 실패",
									}).then(function(){
										 location.reload();
								    });
							}else{
								Swal.fire({
									  icon: "error",
									  title: "승인 요청 실패",
									  text:  "서버상의 오류로 승인요청에 실패했습니다. 잠시후에 다시 시도해주세요",
									}).then(function(){
										 location.reload();
								    });
								}
					
					}else if(choice.val()=="del"){
						
						if(resp == "OK"){
						
						Swal.fire({
							  icon: "success",
							  title: "삭제 성공",
							  text: "삭제가 성공적으로 완료되었습니다.",
							}).then(function(){
								 location.reload();
						    });
						}else if(resp == "FILEDELFAIL" ){
							Swal.fire({
								  icon: "error",
								  title: "삭제 실패",
								  text:  "삭제가 파일 삭제에 문제가 생겼습니다.",
								}).then(function(){
									 location.reload();
							    });
					}else{
						Swal.fire({
							  icon: "error",
							  title: "승인 요청 실패",
							  text:  "서버상의 오류로 승인요청에 실패했습니다. 잠시후에 다시 시도해주세요",
							}).then(function(){
								 location.reload();
						    });
						}
					}
				
				}
			})
		 
	}

	

$(".check").on("click" , function(){
	 
	formSubmit();
	

	/* 	 */
	});
 


</script>
</body>
</html>